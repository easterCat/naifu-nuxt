var t=Object.defineProperty,e=(e,s,a)=>(((e,s,a)=>{s in e?t(e,s,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[s]=a})(e,"symbol"!=typeof s?s+"":s,a),a);import{I as s,u as a,h as n}from"./pinia.17670579.js";import{u as r}from"./uuid.d56aad75.js";import{a7 as i,q as o}from"./element-plus.fe53e503.js";const c=s({id:"index-store",state:()=>{const{$store:t}=a();return{userInfo:t&&t.get("user")?JSON.parse(t.get("user")):{nickname:"",username:"",id:"",email:"",role_id:""},access_token:t&&t.get("access_token")?JSON.parse(t.get("access_token")):"",refresh_token:t&&t.get("refresh_token")?JSON.parse(t.get("refresh_token")):""}},getters:{nickname:t=>t.userInfo.nickname,username:t=>t.userInfo.nickname?t.userInfo.nickname:t.userInfo.username,userId:t=>t.userInfo.id,email:t=>t.userInfo.email,roleId:t=>t.userInfo.role_id,favoriteIds:t=>t.userInfo.favorites&&t.userInfo.favorites.length?t.userInfo.favorites.map((t=>t.id)).join(","):"",favorites:t=>t.userInfo.favorites&&t.userInfo.favorites.length?t.userInfo.favorites:[]},actions:{setUserInfo(t){const{$store:e}=a();this.userInfo={...t},e.set("user",JSON.stringify(this.userInfo))},setToken(t,e){const{$store:s}=a();this.access_token=t,this.refresh_token=e,s.set("access_token",JSON.stringify(this.access_token)),s.set("refresh_token",JSON.stringify(this.refresh_token))},clearUserInfo(){const{$store:t}=a();this.userInfo={nickname:"",username:"",id:"",email:"",role_id:""},t.remove("user")},clearToken(){const{$store:t}=a();this.access_token="",this.refresh_token="",t.remove("access_token"),t.remove("refresh_token")},async refresh(){const{$store:t}=a(),{AuthApi:e}=A(),s=await e.refresh();if(200===s.code){const{access_token:e}=s.data;this.access_token=e,t.set("access_token",JSON.stringify(e))}},removeFavoriteById(t){const e=this.userInfo.favorites.findIndex((e=>e.id===t));if(e>=0){const{$store:t}=a();this.userInfo.favorites.splice(e,1),t.set("user",JSON.stringify(this.userInfo))}},addFavoriteById(t){if(t){const{$store:e}=a();this.userInfo.favorites.push(t),e.set("user",JSON.stringify(this.userInfo))}}}});let u=null;function h(t){return u&&u.close(),u=i({showClose:!0,message:t,type:"error"}),u}const l=(t,e,s)=>{const a=n(),i=a.public.FLASK_BASE_API,o=a.public.API_DATA_FROM,u=c();let l="";return l="github"===o||"github"===s?t:i+t,new Promise((async(t,a)=>{try{const n={...e,key:r.v4()};u.access_token&&"github"!==s&&(l.includes("refresh")?n.headers={Authorization:`Bearer ${u.refresh_token}`}:n.headers={Authorization:`Bearer ${u.access_token}`});const i=await $fetch(l,n);i?20001===(null==i?void 0:i.code)?await u.refresh():20002===(null==i?void 0:i.code)||20003===(null==i?void 0:i.code)||500===(null==i?void 0:i.code)?h(null==i?void 0:i.msg):t(i):a(`${l} => 数据获取失败`)}catch(n){console.error("$fetch出现错误 => ",n),a(n)}}))};class g{constructor(){e(this,"get",((t,e,s)=>l(t,{method:"get",params:e},s))),e(this,"post",((t,e,s)=>l(t,{method:"post",body:e},s))),e(this,"put",((t,e,s)=>l(t,{method:"put",body:e},s))),e(this,"delete",((t,e,s)=>l(t,{method:"delete",body:e},s)))}}const p=new class extends g{getEhtags(){return this.get("https://raw.githubusercontent.com/scooderic/exhentai-tags-chinese-translation/master/dist/ehtags-cn.json",{},"github")}};const f=new class extends g{getNameSpaceList(){return this.get("https://ehtt.fly.dev/database",{},"github")}getListByNameSpace(){return this.get("https://raw.githubusercontent.com/EhTagTranslation/Database/master/database/female.md",{},"github")}getAllJsonData(){return this.get("https://raw.githubusercontent.com/EhTagTranslation/DatabaseReleases/master/db.full.json",{},"github")}};const d=new class extends g{getList(t){return this.get("https://lexica.art/api/v1/search",t)}};const m=new class extends g{getList(t){return this.post("https://api.cerfai.com/open/get_full_categories",t,"github")}getTagsById(t){return this.post("https://api.cerfai.com/open/get_tags_by_category",t,"github")}searchTags(t){return this.post("https://api.cerfai.com/search_tags",t,"github")}};const k=new class extends g{translate(t){return this.post("/translate",t)}};const _=new class extends g{getTags(){return this.get("https://raw.githubusercontent.com/easterCat/nuxt-utils-assets/main/json/tags.json",{},"github")}};const b=new class extends g{async getLinks(){const t=n().public.API_DATA_FROM;if("github"===t){const t="https://raw.githubusercontent.com/easterCat/nuxt-utils-assets/main/json/links.json",e=await this.get(t);return{links:JSON.parse(e),total:null}}if("database"===t){const t=await this.get("/link/list",{pageIndex:1,pageSize:1e3}),{data:e}=o(t);return{links:e.list,total:e.total}}}async addLink(t){return await this.post("/link/list",t)}async updateLink(t){return await this.put("/link/list",t)}async deleteLink(t){return await this.delete("/link/list",t)}};const y=new class extends g{async getTemplates(t){const e=n().public.API_DATA_FROM;if("github"===e){const t="https://raw.githubusercontent.com/easterCat/nuxt-utils-assets/main/json/templates.json",e=await this.get(t);return{templates:JSON.parse(e),total:null}}if("database"===e){const e="/get_templates",s=await this.get(e,t),{data:a}=o(s);return{templates:a.list,total:a.total}}}async getTemplatesNoval(t){const e=await this.get("/get_templates_noval",t),{data:s}=o(e);return{templates:s.list,total:s.total}}async getTemplatesChitu(t){const e=await this.get("/get_templates_chitu",t),{data:s}=o(e);return{templates:s.list,total:s.total}}async setIp(){const t=(await this.get("/set_ip")).data.ip,{$store:e}=a();return e.set("ip",t),{ip:t}}async likeTemplateById(t){return await this.post("/template/favorite/sfw",t)}};const w=new class extends g{async register(t){return await this.post("/auth/registration",t)}async login(t){return await this.post("/auth/login",t)}async logout(){return await this.post("/auth/logout/access")}async refresh(){return await this.post("/auth/token/refresh")}async getUserInfo(){return await this.get("/auth/user/info")}async getUserFavorites(){return await this.get("/auth/user/favorite")}};const I=new class extends g{generate(t){return this.post(t.postUrl,t,"github")}rrythGenerate(t){return this.post("/draw/ai",t)}};const v={EhtagsApi:p,EhttApi:f,LexicaApi:d,GelbooruApi:m,ShopApi:k,DefaultTagsApi:_,LinkApi:b,TemplateApi:y,AuthApi:w,NovalApi:I,DanbooruApi:new class extends g{analysisImage(t){return this.post("/danbooru/analysis",t)}async searchBooruList(t){const e=await this.get("/danbooru/list",t),{data:s}=o(e);return{templates:s.list,total:s.total}}}},A=()=>v;export{c as a,A as u};
